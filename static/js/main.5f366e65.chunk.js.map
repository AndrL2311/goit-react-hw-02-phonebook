{"version":3,"sources":["components/profile/Profile.module.css","components/transactions/TransactionHistory.module.css","components/statistics/Statistics.module.css","components/friendListItem/FriendListItem.module.css","components/friendList/FriendList.module.css","components/default.jpg","components/profile/Profile.jsx","components/statistics/Statistics.jsx","components/friendListItem/FriendListItem.jsx","components/friendList/FriendList.jsx","components/transactions/TransactionHistory.jsx","App.js","index.js"],"names":["module","exports","Profile","props","avatar","name","tag","location","stats","className","s","profile","description","src","alt","item","label","quantity","followers","views","likes","defaultProps","defaultImage","randomColor","Math","floor","random","Statistics","title","StatisticItem","map","stat","style","backgroundColor","percentage","id","statistics","statList","FriendListItem","isOnline","online","offline","width","FriendList","listItem","friends","friend","list","TransactionHistory","transactionItems","items","row","bodyCell","type","amount","currency","transaction","head","headCell","App","user","statisticalData","friendsData","trasactionData","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f366e65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__2VM8b\",\"description\":\"Profile_description__15Z3A\",\"avatar\":\"Profile_avatar__27k2E\",\"name\":\"Profile_name__UTi5J\",\"tag\":\"Profile_tag__1WSAF\",\"location\":\"Profile_location__2iOGF\",\"text\":\"Profile_text__21lks\",\"stats\":\"Profile_stats__2NWYr\",\"item\":\"Profile_item__Uhc4u\",\"label\":\"Profile_label__1CkjB\",\"quantity\":\"Profile_quantity__1lZTF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transaction\":\"TransactionHistory_transaction__3hkL5\",\"head\":\"TransactionHistory_head__3D08m\",\"headCell\":\"TransactionHistory_headCell__kxcEL\",\"bodyCell\":\"TransactionHistory_bodyCell__2ejCf\",\"row\":\"TransactionHistory_row__Zoudx\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"Statistics_statistics__1G8AH\",\"title\":\"Statistics_title__r3CCj\",\"statList\":\"Statistics_statList__33tnY\",\"item\":\"Statistics_item__V5txQ\",\"label\":\"Statistics_label__4230R\",\"percentage\":\"Statistics_percentage__wJ8w0\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"FriendListItem_item__2QuqN\",\"isOnline\":\"FriendListItem_isOnline__3AmWV\",\"online\":\"FriendListItem_online__2B0tn FriendListItem_isOnline__3AmWV\",\"offline\":\"FriendListItem_offline__1CxUh FriendListItem_isOnline__3AmWV\",\"avatar\":\"FriendListItem_avatar__3nMyV\",\"name\":\"FriendListItem_name__2xpQY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"FriendList_list__38AQh\"};","export default __webpack_public_path__ + \"static/media/default.2e01288c.jpg\";","import PropTypes from 'prop-types';\n\nimport s from './Profile.module.css';\nimport defaultImage from '../default.jpg';\n\nfunction Profile(props) {\n  const { avatar, name, tag, location, stats } = props;\n  return (\n    <div className={s.profile}>\n      <div className={s.description}>\n        <img src={avatar} alt=\"Аватар пользователя\" className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.item}>\n          <span className={s.label}>Followers</span>\n          <span className={s.quantity}>{stats.followers}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Views</span>\n          <span className={s.quantity}>{stats.views}</span>\n        </li>\n        <li className={s.item}>\n          <span className={s.label}>Likes</span>\n          <span className={s.quantity}>{stats.likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\nProfile.defaultProps = {\n  avatar: defaultImage,\n  name: 'N/A',\n};\n\nProfile.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  tag: PropTypes.string,\n  location: PropTypes.string,\n  stats: PropTypes.object,\n};\nexport default Profile;\n","import PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nfunction Statistics({ title, stats }) {\n  const StatisticItem = stats.map(stat => (\n    <li\n      className={s.item}\n      key={stat.id}\n      style={{ backgroundColor: randomColor() }}\n    >\n      <span className={s.label}>{stat.label}</span>\n      <span className={s.percentage}>{stat.percentage}%</span>\n    </li>\n  ));\n\n  return (\n    <section className={s.statistics}>\n      {title && <h2 className={s.title}>{title}</h2>}\n      <ul className={s.statList}>{StatisticItem}</ul>\n    </section>\n  );\n}\n\nStatistics.propTypes = {\n  title: PropTypes.string,\n  stats: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n\nfunction randomColor() {\n  const x = Math.floor(Math.random() * 256);\n  const y = Math.floor(Math.random() * 256);\n  const z = Math.floor(Math.random() * 256);\n  return 'rgb(' + x + ',' + y + ',' + z + ')';\n}\n\nexport default Statistics;\n","import PropTypes from 'prop-types';\nimport s from './FriendListItem.module.css';\n\nfunction FriendListItem({ isOnline, avatar, name }) {\n  return (\n    <li className={s.item}>\n      <span className={isOnline ? s.online : s.offline}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendListItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n\nexport default FriendListItem;\n","import PropTypes from 'prop-types';\nimport FriendListItem from '../friendListItem/FriendListItem';\nimport s from './FriendList.module.css';\n\nfunction FriendList({ friends }) {\n  const listItem = friends.map(friend => (\n    <FriendListItem\n      key={friend.id}\n      isOnline={friend.isOnline}\n      avatar={friend.avatar}\n      name={friend.name}\n    />\n  ));\n\n  return <ul className={s.list}>{listItem}</ul>;\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.number.isRequired }),\n  ),\n};\n\nexport default FriendList;\n","import PropTypes from 'prop-types';\nimport s from './TransactionHistory.module.css';\n\nfunction TransactionHistory({ items }) {\n  const transactionItems = items.map(item => (\n    <tr className={s.row} key={item.id}>\n      <td className={s.bodyCell}>{item.type}</td>\n      <td className={s.bodyCell}>{item.amount}</td>\n      <td className={s.bodyCell}>{item.currency}</td>\n    </tr>\n  ));\n\n  return (\n    <table className={s.transaction}>\n      <thead className={s.head}>\n        <tr>\n          <th className={s.headCell}>Type</th>\n          <th className={s.headCell}>Amount</th>\n          <th className={s.headCell}>Currency</th>\n        </tr>\n      </thead>\n\n      <tbody>{transactionItems}</tbody>\n    </table>\n  );\n}\n\nexport default TransactionHistory;\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({ id: PropTypes.string.isRequired }),\n  ),\n};\n","import Profile from './components/profile/Profile';\nimport user from './components/profile/user.json';\nimport Statistics from './components/statistics/Statistics';\nimport statisticalData from './components/statistics/statistical-data.json';\nimport FriendList from './components/friendList/FriendList';\nimport friendsData from './components/friendList/friends.json';\nimport trasactionData from './components/transactions/transactions.json';\nimport TransactionHistory from './components/transactions/TransactionHistory';\n\nfunction App() {\n  return (\n    <div>\n      <Profile\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        stats={user.stats}\n      />\n      <Statistics title=\"Upload stats\" stats={statisticalData} />\n      <FriendList friends={friendsData} />\n      <TransactionHistory items={trasactionData} />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n// import reportWebVitals from './reportWebVitals';\n// ============================================\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n// reportWebVitals();\n"],"sourceRoot":""}